plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
}

version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.terraformersmc.com" }
	maven { url = 'https://maven.nucleoid.xyz' }
}

loom {
	splitEnvironmentSourceSets()
	accessWidenerPath = file("src/main/resources/improved-maps.accesswidener")

	mods {
		"improved-maps" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modImplementation "eu.pb4:polymer-core:${project.polymer_version}"
	modImplementation "eu.pb4:polymer-networking:${project.polymer_version}"
	modImplementation "eu.pb4:polymer-resource-pack:${project.polymer_version}"
	modLocalRuntime "eu.pb4:polymer-autohost:${project.polymer_version}"
	modImplementation include("xyz.nucleoid:server-translations-api:${project.server_translations_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}
